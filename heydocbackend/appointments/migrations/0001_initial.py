# Generated by Django 5.2.5 on 2025-08-22 02:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('doctors', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AppointmentStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(blank=True, max_length=7)),
            ],
            options={
                'verbose_name_plural': 'appointment statuses',
                'db_table': 'appointments_appointmentstatus',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateField()),
                ('appointment_time', models.TimeField()),
                ('duration', models.PositiveIntegerField(default=30)),
                ('consultation_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('symptoms', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('prescription', models.TextField(blank=True)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('payment_id', models.CharField(blank=True, max_length=100)),
                ('booking_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('clinic', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='doctors.clinic')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_appointments', to='doctors.doctorprofile')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_appointments', to=settings.AUTH_USER_MODEL)),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='appointments.appointmentstatus')),
            ],
            options={
                'db_table': 'appointments_appointment',
                'ordering': ['-appointment_date', '-appointment_time'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='appointments.appointment')),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('new_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='new_status_history', to='appointments.appointmentstatus')),
                ('old_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='old_status_history', to='appointments.appointmentstatus')),
            ],
            options={
                'verbose_name_plural': 'appointment histories',
                'db_table': 'appointments_appointmenthistory',
            },
        ),
    ]
